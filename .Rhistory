??"make directory"
?md
?create.file
??create.file
??file
help.search("file", package = "base")
dir.create(summaries_dir)
mapply(write,
x = summaries,
file = summaries_files)
mapply(write,
x = summaries,
file = summaries_files,
SIMPLIFY = TRUE)
junk <- mapply(write,
x = summaries,
file = summaries_files)
write(Sys.Date,
file = file.path(summaries_dir,
"date_downloaded.txt")
)
Sys.Date
Sys.Date()
write(Sys.Date(),
file = file.path(summaries_dir,
"date_downloaded.txt")
)
Sys.time()
format(Sys.time(), "%Y-")
format(Sys.time(), "%Y-%M")
format(Sys.time())
write(format(Sys.time()),
file = file.path(summaries_dir,
"date_downloaded.txt")
)
library(XML)
test <- htmlParse(summaries[[1]])
test
str(test)
test1 <- readHTMLTable(test)
str(test1)
test1[[1]]
test1[[2]]
test1[[3]]
write(test1[[3]], file = "test.txt")
str(test1[[3]])
test2 <- test1[[3]]
View(test2)
test2[4, 1]
test <- htmlTreeParse(summaries[[1]])
test
names(test)
names(test$children)
names(test$children$html)
names(test$children$html$body)
test$children$html$body
test$children$html
names(test$children$html)
test <- htmlTreeParse(summaries[[1]], asText = TRUE)
test
getHTMLLinks(summaries[[1]])
test <- htmlTreeParse(summaries[[1]])
doc <- htmlTreeParse(summaries[[1]])
xpathApply(doc)
xpathApply(doc, "//table[@class='Table27']"")
"
xpathApply(doc, "//table[@class='Table27']")
xpathApply(doc, "//table[@class='Table27']", print)
getNodeSet(doc, "//table[@class='Table27']", print)
getNodeSet(doc, "//table[@class='Table27']")
xmlRoot(doc)
getNodeSet(doc, "//table[@class='Table27']")
doc <- htmlTreeParse(summaries[[1]], useInternalNodes = TRUE)
getNodeSet(doc, "//table[@class='Table27']")
tb <- getNodeSet(doc, "//table[@class='Table27']")
sapply(tb[["thead"]][["tr"]]["th"], xmlValue)
sapply(tb[["tbody"]]["tr"],  function(x) sapply(x["td"], xmlValue))
readHTMLTable =
function(tb)
{
# get the header information.
colNames = sapply(tb[["thead"]][["tr"]]["th"], xmlValue)
vals = sapply(tb[["tbody"]]["tr"],  function(x) sapply(x["td"], xmlValue))
matrix(as.numeric(vals[-1,]),
nrow = ncol(vals),
dimnames = list(vals[1,], colNames[-1]),
byrow = TRUE
)
}
tables = lapply(o, readHTMLTable)
o <- getNodeSet(doc, "//table[@class='Table27']")
tables = lapply(o, readHTMLTable)
o
o[[1]]
names(o)
names(o[[1]])
names(o[[1]][["tbody"]])
o[[1]][["tbody"]][["tr"]]
o[[1]][["tbody"]][[1]]
o[[1]][["tbody"]][[2]]
o[[1]][["tbody"]][[5]]
o[[1]][["tbody"]][[6]]
o[[1]][["tbody"]][[7]]
o <- getNodeSet(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']")
o
o
readHTMLTable(o)
readHTMLTable(o[[1]])
o[[1]]
names(forms)
tmp = xmlSApply(doc, function(x) xmlSApply(x, xmlValue))
doc <- xmlRoot(htmlTreeParse(summaries[[1]], useInternalNodes = TRUE))
tmp = xmlSApply(doc, function(x) xmlSApply(x, xmlValue))
tmp[""body]
tmp["body"]
o <- getNodeSet(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']")
o
table(names(doc))
table(names(o[[1]]))
o[[1]]
o <- getNodeSet(doc, "//table[@class='Table27']//tr")
o
o <- xpathSApply(doc, "//table[@class='Table27']//tr")
o
o <- xpathSApply(doc, "//table[@class='Table27']//td")
o
o <- xpathSApply(doc, "//table[@class='Table27']//td[@class='outbreak_country']")
o
o <- xpathSApply(doc, "//table[@class='Table27']//td[@class='*outbreak_country']")
o
o <- xpathSApply(doc, "//table[@class='Table27']//td[@class='filtrer_tds vacborder outbreak_country']")
o
o <- xpathSApply(doc, "//table[@class='Table27']//td[@class='filtrer_tds vacborder outbreak_country'][text()]")
o
o <- xpathSApply(doc, "//table[@class='Table27']//td[@class='filtrer_tds vacborder outbreak_country' text()]")
o <- xpathSApply(doc, "//table[@class='Table27']//td[@class='filtrer_tds vacborder outbreak_country', text()]")
o <- xpathSApply(doc, "//table[@class='Table27']//td[@class='filtrer_tds vacborder outbreak_country']")
o
o <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country']")
O
o
o <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country'] | //table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']")
o
o <- getNodeSet(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country'] | //table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']")
o
doc <- xmlRoot(htmlTreeParse(summaries[[2]], useInternalNodes = TRUE))
o <- getNodeSet(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country'] | //table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']")
o
o <- getNodeSet(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country']/text() | //table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder/text()']")
o
o[[1]]
o <- getNodeSet(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country']/text() | //table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/text()")
o
o <- getNodeSet(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country']/text() | //table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/node()")
o
o <- getNodeSet(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country']/text() | //table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']")
o
country_list <- getNodeSet(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country']/text()")
country_list
country_list <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder outbreak_country']/text()")
country_list
resolved_list <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/text()"
)
resolved_list <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/text()")
resolved_list
length(country_list)
length(resolved_list)
seq(2, length(resolved_list), by = 8)
temp_resolved_list <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/text()")
resolved_list <- temp_resolved_list[[seq(2, length(temp_resolved_list), by = 8)]]
temp_resolved_list
temp_resolved_list[[c(2, 10)]]
temp_resolved_list[[c(2)]]
temp_resolved_list[[list(2, 10)]]
temp_resolved_list[list(2, 10)]
temp_resolved_list[c(2, 10)]
resolved_list <- temp_resolved_list[seq(2, length(temp_resolved_list), by = 8)]
resolved_list
temp_status_list <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/text()")
temp_status_list
status_list <- temp_status_list[seq(1, length(temp_resolved_list), by = 8)]
status_list
temp_date_list <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/text()")
date_list <- temp_date_list[seq(2, length(temp_date_list), by = 8)]
date_list
temp_outbreak_links_list <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[@href='javascript:;']")
temp_outbreak_links_list
temp_outbreak_links_list <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[@href='javascript:;']/@onclick")
temp_outbreak_links_list
temp_outbreak_links_list <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[@href='javascript:;']/@onclick", simplify = FALSE)
temp_outbreak_links_list
temp_outbreak_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[@href='javascript:;']/@onclick")
temp_outbreak_links_char
outbreak_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[@href='javascript:;']/@onclick")
event_summary_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[@href='/wahis_2/*']/@href")
event_summary_links_char
event_summary_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[contains((@href, '/wahis_2/'))]/@href")
event_summary_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a/@href")
event_summary_links_char
event_summary_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']//[contains((@href, '/wahis_2/'))]/@href")
event_summary_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']//*[contains((@href, '/wahis_2/'))]/@href")
event_summary_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']//*[contains((@href, 'viewsummary'))]/@href")
event_summary_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[contains((@href, 'viewsummary'))]/@href")
event_summary_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[contains(@href, 'viewsummary')]/@href")
event_summary_links_char
full_report_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[contains(@href, 'Reviewreport')]/@href")
full_report_links_char
full_report_links_char <- xpathSApply(doc, "//table[@class='Table27']//tr[@class='outbreakdetails']//td[@class='filtrer_tds vacborder']/a[contains(@href, 'page_refer=MapFullEventReport')]/@href")
full_report_links_char
library(RHTMLForms)
library(RCurl)
getDiseaseSummaries <- function(disease, years) {
url <- "http://www.oie.int/wahis_2/public/wahid.php/Diseaseinformation/Immsummary"
forms <- getHTMLFormDescription(url) # RHTMLForms
summaries_fun <- createFunction(forms[["diseaseform"]]) # RHTMLForms
years_char <- as.character(years)
names(years) <- years_char
# summaries_dir <- "summaries"
# dir.create(summaries_dir)
# summaries_files <- file.path(summaries_dir,
#                              paste0(years_char,
#                                     ".html")
#                              )
summaries <- sapply(years,
function(x) {
summaries_fun(year = x,
disease_id_terrestrial = disease)
},
simplify = FALSE)
# junk <- mapply(write,
#                x = summaries,
#                file = summaries_files)
#
# write(format(Sys.time()),
#       file = file.path(summaries_dir,
#                        "date_downloaded.txt")
#       )
#
return(summaries)
}
years <- 2005:2014
disease = "12"
summaries <- getDiseaseSummaries(disease = disease, years = years)
summary <- summaries[[3]]
library(XML)
doc <- xmlRoot(htmlTreeParse(summary, useInternalNodes = TRUE))
get_node <- function(doc, XPath) {
gsub("^\\s*",
"",
gsub("\\s*$",
"",
xpathSApply(doc, XPath, xmlValue)
)
)
}
country <- get_node(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder outbreak_country']
|
//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds outbreak_country no_topborder']")
country
while(length(which(country == "Â")) > 0) {
country[which(country == "Â")] <- country[which(country == "Â") - 1]
}
country
summary <- summaries[[10]]
doc <- xmlRoot(htmlTreeParse(summary, useInternalNodes = TRUE))
get_node <- function(doc, XPath) {
gsub("^\\s*",
"",
gsub("\\s*$",
"",
xpathSApply(doc, XPath, xmlValue)
)
)
}
country <- get_node(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder outbreak_country']
|
//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds outbreak_country no_topborder']")
while(length(which(country == "Â")) > 0) {
country[which(country == "Â")] <- country[which(country == "Â") - 1]
}
country
temp_statuses_dates <- get_node(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder' and @color='red']")
temp_statuses_dates
strsplit(temp_statuses_dates, "\\d{2}/\\d{2}/\\d{4}")
strsplit(temp_statuses_dates, "\\d{2}/\\d{2}/\\d{4}")
status <- strsplit(temp_statuses_dates, "\\d{2}/\\d{2}/\\d{4}")
strsplit(temp_statuses_dates, "[^[:digit:]/]*")
unsplit(strsplit(temp_statuses_dates, "[^[:digit:]/]*"))
unlist(strsplit(temp_statuses_dates, "[^[:digit:]/]*"))
sapply(strsplit(temp_statuses_dates, "[^[:digit:]/]*"), length)
sapply(strsplit(temp_statuses_dates, "[^[:digit:]/]*"), paste0)
sapply(strsplit(temp_statuses_dates, "[^[:digit:]/]*"), paste0)
sapply(strsplit(temp_statuses_dates, "[^[:digit:]/]*"), paste)
sapply(strsplit(temp_statuses_dates, "[^[:digit:]/]*"), paste, collapse = "x")
sapply(strsplit(temp_statuses_dates, "[^[:digit:]/]*"), paste, collapse = "")
date <- sapply(strsplit(temp_statuses_dates, "[^[:digit:]/]*"), paste, collapse = "")
outbreaks_link_parameters <- gsub("outbreaklist\\('(\\w{3})',(\\d*)\\);",
"list(reportid = \\2, summary_country = \\1)",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[@href='javascript:;']/@onclick")
)
names(outbreaks_link_parameters) <- NULL
event_summary_link <- paste0("http://www.oie.int",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[contains(@href, 'viewsummary')]
/@href")
)
full_report_link <- gsub("javascript: open_report\\(\"",
"http://www.oie.int",
gsub("\",",
"reportid=",
gsub("\\);",
"",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[contains(@href, 'page_refer=MapFullEventReport')]
/@href")
)
)
)
names(full_report_link) <- NULL
return(cbind(country,
status,
date,
outbreaks_link_parameters,
event_summary_link,
full_report_link)
)
cbind(country,
status,
date,
outbreaks_link_parameters,
event_summary_link,
full_report_link)
)
cbind(country,
status,
date,
outbreaks_link_parameters,
event_summary_link,
full_report_link)
outbreaks_link_parameters <- strsplit(gsub("outbreaklist\\('(\\w{3})',(\\d*)\\);",
"\\2|\\1)",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[@href='javascript:;']/@onclick")
),
"|",
fixed = TRUE)
strsplit(gsub("outbreaklist\\('(\\w{3})',(\\d*)\\);",
"\\2|\\1)",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[@href='javascript:;']/@onclick")
),
"|",
fixed = TRUE)
outbreaks_link_parameters <- strsplit(gsub("outbreaklist\\('(\\w{3})',(\\d*)\\);",
"\\2|\\1",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[@href='javascript:;']/@onclick")
),
"|",
fixed = TRUE)
sapply(outbreaks_link_parameters function(x) c(x[1], x[2]))
sapply(outbreaks_link_parameters, function(x) c(x[1], x[2]))
sapply(outbreaks_link_parameters, function(x) cbind(x[1], x[2]))
sapply(outbreaks_link_parameters, function(x) rbind(x[1], x[2]))
sapply(outbreaks_link_parameters, function(x) cbind(x[1], x[2]))
sapply(outbreaks_link_parameters, function(x) list(reportid = x[1], summary_country = x[2]))
lapply(outbreaks_link_parameters, function(x) list(reportid = x[1], summary_country = x[2]))
sapply(outbreaks_link_parameters, function(x) list(reportid = x[1], summary_country = x[2]))
t(sapply(outbreaks_link_parameters, function(x) list(reportid = x[1], summary_country = x[2])))
outbreaks_link_parameters_df <- t(sapply(outbreaks_link_parameters, function(x) list(reportid = x[1], summary_country = x[2])))
outbreaks_link_parameters_df
rownames(outbreaks_link_parameters_df) <- NULL
outbreaks_link_parameters_df
event_summary_link <- paste0("http://www.oie.int",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[contains(@href, 'viewsummary')]
/@href")
)
full_report_link <- gsub("javascript: open_report\\(\"",
"http://www.oie.int",
gsub("\",",
"reportid=",
gsub("\\);",
"",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[contains(@href, 'page_refer=MapFullEventReport')]
/@href")
)
)
)
names(full_report_link) <- NULL
cbind(country,
status,
date,
outbreaks_link_parameters_df,
event_summary_link,
full_report_link)
parseSummary <- function(summary) {
doc <- xmlRoot(htmlTreeParse(summary, useInternalNodes = TRUE))
get_node <- function(doc, XPath) {
gsub("^\\s*",
"",
gsub("\\s*$",
"",
xpathSApply(doc, XPath, xmlValue)
)
)
}
country <- get_node(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder outbreak_country']
|
//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds outbreak_country no_topborder']")
while(length(which(country == "Â")) > 0) {
country[which(country == "Â")] <- country[which(country == "Â") - 1]
}
temp_statuses_dates <- get_node(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder' and @color='red']")
status <- strsplit(temp_statuses_dates, "\\d{2}/\\d{2}/\\d{4}")
date <- sapply(strsplit(temp_statuses_dates, "[^[:digit:]/]*"), paste, collapse = "")
outbreaks_link_parameters <- strsplit(gsub("outbreaklist\\('(\\w{3})',(\\d*)\\);",
"\\2|\\1",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[@href='javascript:;']/@onclick")
),
"|",
fixed = TRUE)
outbreaks_link_parameters_df <- t(sapply(outbreaks_link_parameters, function(x) list(reportid = x[1], summary_country = x[2])))
rownames(outbreaks_link_parameters_df) <- NULL
event_summary_link <- paste0("http://www.oie.int",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[contains(@href, 'viewsummary')]
/@href")
)
full_report_link <- gsub("javascript: open_report\\(\"",
"http://www.oie.int",
gsub("\",",
"reportid=",
gsub("\\);",
"",
xpathSApply(doc,
"//table[@class='Table27']
//tr[@class='outbreakdetails']
//td[@class='filtrer_tds vacborder']
/a[contains(@href, 'page_refer=MapFullEventReport')]
/@href")
)
)
)
names(full_report_link) <- NULL
return(cbind(country,
status,
date,
outbreaks_link_parameters_df,
event_summary_link,
full_report_link)
)
}
test <- lapply(summaries, parseSummary)
test[1]
View(test[1])
View(test[[1])
View(test[[1]])
